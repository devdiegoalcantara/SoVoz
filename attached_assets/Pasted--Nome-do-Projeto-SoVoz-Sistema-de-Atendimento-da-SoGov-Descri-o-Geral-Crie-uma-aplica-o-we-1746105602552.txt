📌 Nome do Projeto
SoVoz – Sistema de Atendimento da SoGov

🧭 Descrição Geral
Crie uma aplicação web com frontend e backend que permita que cidadãos e servidores públicos enviem bugs, sugestões ou feedbacks sobre o sistema SoGov. A equipe da Sogo Tecnologia poderá acompanhar essas demandas em um painel Kanban e visualizar estatísticas. O sistema deve permitir cadastro e login simples (sem OAuth).

🔧 Funcionalidades
1. 🧑‍💻 Autenticação
Cadastro e login de usuários com:

Nome

E-mail

Senha

Dois níveis de acesso:

Usuário comum: pode enviar tickets.

Administrador: pode acessar painel Kanban e estatísticas.

Tipo de usuário salvo no banco ("admin" ou "user").

2. 📨 Envio de Tickets
Formulário de envio com os seguintes campos:

Título

Descrição

Tipo (Bug, Sugestão, Feedback)

Órgão relacionado (campo de texto)

Nome (opcional)

E-mail (opcional)

Anexo de imagem ou vídeo (até 10MB, .jpg, .png, .mp4)

Todos os dados devem ser salvos no banco (MongoDB), com status inicial: "Novo"

3. 🗂 Painel Administrativo (somente admin)
Visualização em Kanban com colunas:

Novo

Em andamento

Resolvido

Ações:

Alterar status do ticket

Ver detalhes do ticket

4. 📊 Estatísticas
Gráficos com:

Quantidade de tickets por tipo

Quantidade de tickets por status

Órgãos mais citados

Usar Chart.js

🎨 Estilo Visual (simples e leve)
Azul principal: #1B4DC2

Fundo escuro sidebar: #0C1B3A

Verde (sucesso): #28A745

Vermelho (erro): #D9534F

Texto: #343A40, fundo de cards: #F9FAFB

Layout com CSS puro (sem frameworks)

Sidebar fixa à esquerda, painel responsivo

⚙️ Tecnologias
Frontend:

HTML, CSS, JavaScript

Chart.js (gráficos)

Fetch API para requisições

Backend (Node.js + Express):

Express

MongoDB (Mongoose)

Multer (upload de arquivos)

dotenv

cors

bcryptjs (para senha)

jsonwebtoken (JWT)

📦 Dependências (instalar no terminal do Replit)
bash
Copiar
Editar
npm install express mongoose cors dotenv multer bcryptjs jsonwebtoken
🗂 Estrutura sugerida de pastas
markdown
Copiar
Editar
/server
  - index.js
  - routes/
  - controllers/
  - models/
  - uploads/

 /client
  - index.html
  - login.html
  - cadastro.html
  - admin.html
  - scripts/
✅ Resumo do Fluxo
Usuário comum acessa /, envia ticket com ou sem login.

Usuário cadastrado pode ver seus tickets.

Admin logado acessa /admin.html com painel Kanban e estatísticas.

Os dados são salvos no MongoDB e arquivos na pasta uploads/.

